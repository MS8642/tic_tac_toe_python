import time
print("Welcome to the game of Tic-Tac-Toe!")
time.sleep(1)
print("This is a classic game where you need to place either o or x in the empty fields and to try to get 3 of them in a row")
time.sleep(1)
print('The NPC will try to stop you from doing that!')
print("You need to specify with commands where do you want to put the cross (X)")
print("The commands are: Left top corner, Left side, Left low corner")
print("Middle top, Middle, Middle low, Right top corner, Right side, Right low corner")
i = 0
j = 1
p = 0



while i == 0:
    strt = input("Would you like to play the game?")

    if strt.lower() == 'yes':
        print("Let's play!")
        game = ['empty', 'empty', 'empty',
                'empty', 'empty', 'empty',
                'empty', 'empty', 'empty']

                 # This is a variable that will change according to the decision in the game.
        for x in game: # x are the spaces where either an x,o or nothing can be placed.
            j += 1 # a counter that counts empty spaces
             #if the counter has not reached the last line, print the empty spaces. NOTE! I dont need a star and inverted brackets print(*x,sep=',') it does it automatically.
            if j == 9: #if the counter reaches a value that is divisible by 3 without any reminders ...
                print(x)
                
                
            else:
                print(x)
                p = 0
            
            plr = input("Your move!") # The idea here, is to make decisions for each "empty" field. When the player decides where to place the X, the program will go
            # to that specific decision. If that decision was already made, some statement needs to tell that to the player.
            
            #What could pose a challenge is the NPC however there is a decision. Like with Rock, Paper, Scissors game,
            # it could be possible to randomize the selection of the empty space on which the NPC
            # could place their o. If the empty space is filled either with x or o, the NPC should seek another empty space.
            
            #Currently, the game will finish when all empty spaces are filled out.
            



    elif strt.lower() == 'no':
        print("See you next time!")
        i = 1
    else:
        print("Please re-enter your answer")
